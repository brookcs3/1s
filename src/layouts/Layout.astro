---
import '../styles/global.scss';
import '../styles/modern-styles.css';
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CS362 Project Report</title>
</head>
<body>
  <slot />
  
  <script>
    import Lenis from 'lenis';
    import Pizzicato from 'pizzicato';

    // Make Pizzicato globally available
    window.Pizzicato = Pizzicato;

    // Just basic initialization
    document.addEventListener('DOMContentLoaded', async () => {


      // Initialize sound effects system (no ambient noise)
      try {
        const { default: soundEffects } = await import('../utils/soundEffects.js');
        
        // Make soundEffects globally available for UI interactions only
        window.soundEffects = soundEffects;
        console.log('ðŸŽµ Sound effects system ready (ambient disabled)');
        
      } catch (error) {
        console.warn('Could not initialize sound effects:', error);
      }

      // Create cursor trail effect (only on desktop)
      if (window.innerWidth > 768) {
        const trail = document.createElement('div');
        trail.className = 'cursor-trail';
        document.body.appendChild(trail);
        
        document.addEventListener('mousemove', (e) => {
          const { clientX, clientY } = e;
          
          // Smooth follow with slight delay using GSAP if available
          if (window.gsap) {
            window.gsap.to(trail, {
              x: clientX,
              y: clientY,
              duration: 0.3,
              ease: 'power2.out'
            });
          } else {
            // Fallback positioning
            trail.style.left = clientX + 'px';
            trail.style.top = clientY + 'px';
          }
        });
      }
    });

    // This ensures Lenis is initialized after Astro hydration
    document.addEventListener('astro:page-load', () => {
      // Reinitialize Lenis if needed after page transitions
      if (window.location.pathname === window.location.pathname) {
        // Force a small delay to ensure all components are fully loaded
        setTimeout(() => {
          document.dispatchEvent(new Event('DOMContentLoaded'));
        }, 100);
      }
    });
  </script>
</body>
</html>
