---
import '../styles/Hero.scss';
---

<div id="hero-container" class="hero-container">
  <div id="particles-container" class="particles-container"></div>
  <h1 id="hero-title" class="hero-title">CS362 Group 92 Project</h1>
  <h2 id="hero-subtitle" class="hero-subtitle">Specification Compliance & Student Q&A Review</h2>
</div>

<script>
  import gsap from 'gsap';

  // Wait for DOM to be ready
  document.addEventListener('DOMContentLoaded', () => {
    const heroContainer = document.getElementById('hero-container');
    const titleElement = document.getElementById('hero-title');
    const subtitleElement = document.getElementById('hero-subtitle');
    const particlesContainer = document.getElementById('particles-container');
    
    if (!heroContainer || !titleElement || !subtitleElement || !particlesContainer) return;

    // Create particles with more subtle styling
    const particleCount = 50; // Reduced for subtlety
    
    for (let i = 0; i < particleCount; i++) {
      const particle = document.createElement('div');
      particle.className = 'particle';
      
      // More subtle, professional positioning and sizing
      const size = Math.random() * 3 + 1;
      const posX = Math.random() * 100;
      const posY = Math.random() * 100;
      const opacity = Math.random() * 0.3 + 0.1; // More subtle opacity
      
      // Apply styles
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;
      particle.style.left = `${posX}%`;
      particle.style.top = `${posY}%`;
      particle.style.opacity = opacity.toString();
      
      particlesContainer.appendChild(particle);
    }
    
    // Animate particles with more subtle movement
    gsap.to('.particle', {
      y: 'random(-20, 20)',
      x: 'random(-20, 20)',
      opacity: 'random(0.1, 0.3)',
      duration: 'random(3, 6)',
      ease: 'sine.inOut',
      repeat: -1,
      yoyo: true,
      stagger: {
        each: 0.1,
        from: 'random'
      }
    });

    // Create GSAP timeline for hero animations
    const tl = gsap.timeline();
    
    // Initial state - everything hidden
    gsap.set([titleElement, subtitleElement], { 
      opacity: 0,
      y: 100
    });
    
    // More subtle title animation
    tl.from(titleElement, {
      y: 30,
      opacity: 0,
      duration: 1,
      ease: "power3.out"
    })
    // Subtitle with slight delay
    .from(subtitleElement, {
      y: 20,
      opacity: 0,
      duration: 0.8,
      ease: "power2.out"
    }, "-=0.4");
    
    // Mouse movement effect for 3D rotation
    heroContainer.addEventListener('mousemove', (e) => {
      const xPos = (e.clientX / window.innerWidth - 0.5) * 20;
      const yPos = (e.clientY / window.innerHeight - 0.5) * 20;
      
      gsap.to(titleElement, {
        rotationY: xPos,
        rotationX: -yPos,
        duration: 0.5,
        ease: "power1.out"
      });
    });
  });
</script>

